# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@io_bazel_rules_closure//closure:defs.bzl", "closure_js_binary", "closure_js_library")
load("//tools/udf/closure_js:closure_to_delta.bzl", "closure_to_delta")

package(default_visibility = ["//visibility:public"])

closure_js_library(
    name = "example_js_lib",
    srcs = [
        "externs.js",  # Register APIs called from UDF as functions without definitions for closure.
        "udf.js",  # User-defined functions with handler/entrypoint
    ],
    convention = "NONE",
    deps = [
        "//public/udf:binary_get_values_js_proto",
    ],
)

closure_js_binary(
    name = "example_js",
    deps = [
        ":example_js_lib",
    ],
)

# Generates a UDF delta file using the given closure_js_lib target
# builders/tools/bazel-debian run \
# //tools/udf/closure_js/examples/get_values_binary:example_js_delta
closure_to_delta(
    name = "example_js_delta",
    closure_js_library_target = ":example_js_lib",
    output_file_name = "DELTA_0000000000000009",
)
